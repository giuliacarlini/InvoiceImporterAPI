// <auto-generated />
using System;
using InvoiceImporter.Domain.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceImporter.Domain.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231115220304_ChangesDataTypes2")]
    partial class ChangesDataTypes2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceImporter.Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("DueDate");

                    b.Property<int>("ImportType")
                        .HasColumnType("int")
                        .HasColumnName("ImportType");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("RegisterDate");

                    b.HasKey("Id");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("InvoiceImporter.Domain.Entities.InvoiceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Category");

                    b.Property<string>("CurrentyInstallments")
                        .HasColumnType("char(2)")
                        .HasColumnName("CurrentyInstallments");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Description");

                    b.Property<Guid>("IdInvoice")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TotalInstallments")
                        .HasColumnType("char(2)")
                        .HasColumnName("TotalInstallments");

                    b.Property<decimal>("Value")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItem", (string)null);
                });

            modelBuilder.Entity("InvoiceImporter.Domain.Entities.Invoice", b =>
                {
                    b.OwnsOne("InvoiceImporter.Domain.ValueObjects.FilePath", "FilePath", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("FileName");

                            b1.Property<string>("Path")
                                .IsRequired()
                                .HasColumnType("varchar(200)")
                                .HasColumnName("FilePath");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.Navigation("FilePath");
                });

            modelBuilder.Entity("InvoiceImporter.Domain.Entities.InvoiceItem", b =>
                {
                    b.HasOne("InvoiceImporter.Domain.Entities.Invoice", null)
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("InvoiceImporter.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
